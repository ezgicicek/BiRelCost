fix merge (z). lam f. Lam. Lam. lam x. lam y.
    caseL x of
      nil     => y
    | b :: bs => caseL y of
      	      	      nil    => x
    		  |  c :: cs => if (f (b,c))
		       	        then  b :: merge () f [] [] bs y 
				else  c :: merge () f [] [] x cs
<= [max, 0] : unit -> ( (int X int) -> bool) -> forall n [max, 0] :: size. forall m [max, 0] :: size.
(list [n] int) -> (list[m] int) [max,  5*(n+m)] -> list [n+m] int

