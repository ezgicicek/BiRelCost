let bsplit = {contra : unit  [max, 0]->  
    	     forall i [max, 0] :: size. 
	     (list [i] int) [max,  i] ->  (list[cl(i/2)] int) X (list [fl(i/2)] int) , 0} in
let merge  = {contra : unit -> ( (int X int) -> bool) -> forall n [max, 0] :: size.
    	     forall m [max, 0] :: size.
	     (list [n] int) -> (list[m] int) [max,  5*(n+m)] -> list [n+m] int , 0} in

fix msort(z). lam f. Lam. lam l. caseL l of 
   nil   => nil
 | h::tl => caseL tl of 
   	    nil     => h::nil
	  | h'::tl' => let x = bsplit () [] l in
	  	       merge () f [] [] (msort () f [] (fst x))  (msort () f []  (snd x))	    

<= [max,0] : unit -> ((int X int) [max,0] -> bool) ->
forall i [max, 0] :: size.
(list [i] int) [max,  sum(minpowlin (i), {0, cl(log (i))})] -> list [i] int

